-- LocalScript in StarterPlayerScripts

local Players        = game:GetService("Players")
local RunService     = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

-- CONFIGURATION (spring behavior)
local SPRING_FREQUENCY = 8    -- how fast it tries to reach the target (Hz)
local SPRING_DAMPING   = 1    -- how much it resists oscillation (unitless)

-- SIMPLE VECTOR2 SPRING CLASS
local Spring = {}
Spring.__index = Spring
function Spring.new(freq, damping, initial)
    return setmetatable({
        freq     = freq,
        damping  = damping,
        value    = initial or Vector2.new(),
        velocity = Vector2.new()
    }, Spring)
end
-- dt in seconds, target a Vector2
function Spring:Update(dt, target)
    -- critically damped spring formula based on Hooke's law
    local f = self.freq * 2 * math.pi
    local g = 1 / (1 + self.damping*f*dt + f*f*dt*dt)
    local diff = self.value - target
    local vel_dt = (self.velocity + diff * f) * dt
    self.velocity = (self.velocity - vel_dt * f) * g
    self.value = (self.value + (self.velocity * dt)) * g
    return self.value
end

-- BUILD YOUR GUI

local player  = Players.LocalPlayer
local pGui    = player:WaitForChild("PlayerGui")
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = pGui

local Frame = Instance.new("Frame")
local AnimationLogger = Instance.new("TextLabel")
local UICorner = Instance.new("UICorner")
local Output = Instance.new("TextBox")
local UICorner_2 = Instance.new("UICorner")
local Output_2 = Instance.new("TextLabel")
local UsernameCaseSensitive = Instance.new("TextLabel")
local Credits = Instance.new("TextLabel")
local Loganimations = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local Username = Instance.new("TextBox")
local UICorner_4 = Instance.new("UICorner")

-- Frame
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(20, 24, 24)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.74, 0, 0.35, 0)
Frame.Size = UDim2.new(0, 389, 0, 468)
UICorner.CornerRadius = UDim.new(0, 10)
UICorner.Parent = Frame

-- Title
AnimationLogger.Name = "Animation Logger"
AnimationLogger.Parent = Frame
AnimationLogger.BackgroundTransparency = 1
AnimationLogger.Size = UDim2.new(1, 0, 0, 50)
AnimationLogger.Position = UDim2.new(0, 0, 0.026, 0)
AnimationLogger.Font = Enum.Font.SourceSansBold
AnimationLogger.Text = "Animation Logger"
AnimationLogger.TextColor3 = Color3.fromRGB(179, 205, 208)
AnimationLogger.TextSize = 37
AnimationLogger.TextWrapped = true

-- Username Label
UsernameCaseSensitive.Name = "UsernameLabel"
UsernameCaseSensitive.Parent = Frame
UsernameCaseSensitive.BackgroundTransparency = 1
UsernameCaseSensitive.Position = UDim2.new(0, 49, 0, 70)
UsernameCaseSensitive.Size = UDim2.new(0, 291, 0, 35)
UsernameCaseSensitive.Font = Enum.Font.SourceSans
UsernameCaseSensitive.Text = "Username"
UsernameCaseSensitive.TextColor3 = Color3.fromRGB(212, 240, 255)
UsernameCaseSensitive.TextSize = 25
UsernameCaseSensitive.TextXAlignment = Enum.TextXAlignment.Left

-- Username Box
Username.Name = "Username"
Username.Parent = Frame
Username.BackgroundColor3 = Color3.fromRGB(9, 11, 13)
Username.BorderSizePixel = 0
Username.Position = UDim2.new(0.126, 0, 0.223, 0)
Username.Size = UDim2.new(0, 291, 0, 50)
Username.ClearTextOnFocus = false
Username.Font = Enum.Font.SourceSansSemibold
Username.Text = ""
Username.TextColor3 = Color3.fromRGB(198, 239, 255)
Username.TextSize = 28
UICorner_4.Parent = Username

-- Output Label
Output_2.Name = "OutputLabel"
Output_2.Parent = Frame
Output_2.BackgroundTransparency = 1
Output_2.Position = UDim2.new(0, 49, 0, 162)
Output_2.Size = UDim2.new(0, 291, 0, 35)
Output_2.Font = Enum.Font.SourceSans
Output_2.Text = "Output (IDs)"
Output_2.TextColor3 = Color3.fromRGB(212, 240, 255)
Output_2.TextSize = 25
Output_2.TextXAlignment = Enum.TextXAlignment.Left

-- Output Box
Output.Name = "Output"
Output.Parent = Frame
Output.BackgroundColor3 = Color3.fromRGB(9, 11, 13)
Output.BorderSizePixel = 0
Output.Position = UDim2.new(0.126, 0, 0.421, 0)
Output.Size = UDim2.new(0, 291, 0, 147)
Output.ClearTextOnFocus = false
Output.Font = Enum.Font.SourceSansSemibold
Output.Text = ""
Output.TextColor3 = Color3.fromRGB(198, 239, 255)
Output.TextSize = 28
UICorner_2.Parent = Output

-- Log Button
Loganimations.Name = "Log animations"
Loganimations.Parent = Frame
Loganimations.BackgroundColor3 = Color3.fromRGB(0, 8, 7)
Loganimations.BorderSizePixel = 0
Loganimations.Position = UDim2.new(0, 49, 0, 367)
Loganimations.Size = UDim2.new(0, 291, 0, 58)
Loganimations.Font = Enum.Font.SourceSansBold
Loganimations.Text = "Log current animations"
Loganimations.TextColor3 = Color3.fromRGB(54, 186, 129)
Loganimations.TextSize = 27
UICorner_3.CornerRadius = UDim.new(0, 30)
UICorner_3.Parent = Loganimations

-- Credits
Credits.Name = "Credits"
Credits.Parent = Frame
Credits.BackgroundTransparency = 1
Credits.Position = UDim2.new(0, 0, 1, -25)
Credits.Size = UDim2.new(1, 0, 0, 25)
Credits.Font = Enum.Font.SourceSans
Credits.Text = "Code by yes hello"
Credits.TextColor3 = Color3.fromRGB(255, 255, 255)
Credits.TextSize = 14

-- ANIMATION LOGIC

Loganimations.MouseButton1Click:Connect(function()
    Output.Text = ""
    local inputName = Username.Text
    if inputName == "" then return end

    -- find player (case-insensitive)
    local target
    for _, plr in ipairs(Players:GetPlayers()) do
        if string.lower(plr.Name) == string.lower(inputName) then
            target = plr
            break
        end
    end

    if not target or not target.Character then
        Output.Text = "Unable to find user"
        return
    end

    local humanoid = target.Character:FindFirstChildOfClass("Humanoid")
    local animator = humanoid and humanoid:FindFirstChildOfClass("Animator")
    if not animator then
        return
    end

    local ids = {}
    for _, track in ipairs(animator:GetPlayingAnimationTracks()) do
        if track.Animation and track.Animation.AnimationId then
            local num = track.Animation.AnimationId:match("%d+")
            if num then
                table.insert(ids, num)
            end
        end
    end

    if #ids > 0 then
        Output.Text = table.concat(ids, "\n")
    end
end)

-- DRAGGING LOGIC

local spring   = Spring.new(SPRING_FREQUENCY, SPRING_DAMPING, Vector2.new())
local dragging = false
local dragOffset = Vector2.new()
local conn

-- start drag
Frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        local mousePos = UserInputService:GetMouseLocation()
        local absPos   = Frame.AbsolutePosition
        dragOffset     = mousePos - Vector2.new(absPos.X, absPos.Y)

        -- connect render stepped if not already
        if not conn then
            spring.value = Vector2.new(Frame.AbsolutePosition.X, Frame.AbsolutePosition.Y)
            spring.velocity = Vector2.new()
            conn = RunService.RenderStepped:Connect(function(dt)
                if dragging then
                    local target = UserInputService:GetMouseLocation() - dragOffset
                    local newPos = spring:Update(dt, target)
                    Frame.Position = UDim2.new(0, newPos.X, 0, newPos.Y)
                end
            end)
        end
    end
end)

-- end drag
Frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
        -- disconnect immediately so it stops following
        if conn then
            conn:Disconnect()
            conn = nil
        end
    end
end)
